spring:
  cloud:
    gateway:
      x-forwarded-for:
        enabled: true
      discovery:
        locator:
          lower-case-service-id: true
          enabled: true
      routes:
      - id: dummy
        uri: lb://DUMMY
        predicates:
        - Path=/dummy/**
        filters:
        - RewritePath=/dummy/(?<remains>.*), /$\{remains}
      - id: authorization
        uri: lb://authorization
        predicates:
        - Path=/auth/**
        filters:
        - RewritePath=/auth/(?<remains>.*), /$\{remains}
      - id: music
        uri: lb://music
        predicates:
        - Path=/music/**
        filters:
        - RewritePath=/music/(?<remains>.*), /$\{remains}
      - id: movie
        uri: lb://movie
        predicates:
        - Path=/movie/**
        filters:
        - RewritePath=/movie/(?<remains>.*), /$\{remains}

# EUREKA DISCOVERY
eureka:
  client:
    healthcheck:
      enabled: true
    registerWithEureka: false
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:9091/eureka
  instance:
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    leaseRenewalIntervalInSeconds: 5   # DO NOT DO THIS IN PRODUCTION
# TOMCAT
server:
  port: 8081
---
spring:
  profiles: docker
# EUREKA DISCOVERY
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://node0.registry/eureka, http://node1.registry/eureka # HA in docker environment
  instance:
    instanceId: ${spring.application.name}:${HOSTNAME}
# TOMCAT
server:
  port: 80